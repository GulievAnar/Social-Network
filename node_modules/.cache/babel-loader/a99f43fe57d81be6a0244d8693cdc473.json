{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulie\\\\solid-snake\\\\src\\\\components\\\\content\\\\MyPosts\\\\Posts.jsx\";\nimport React from 'react';\nimport Post from './Post/Post';\nimport styles from './posts.module.css';\nimport { addPostActionCreater, updateNewPostActionCreater } from '../../../reducers/posts-reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  let newPostElement = /*#__PURE__*/React.createRef();\n  let text = newPostElement.current.value;\n\n  let onPostChange = () => {\n    props.updateNewPostActionCreater(text);\n  };\n\n  let addNewPost = () => {\n    props.addPostActionCreater();\n    newPostElement.current.value = '';\n  };\n\n  console.log(props.postsData.postsData);\n  let postElements = props.postsData.postsData.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Post, {\n      name: item.name,\n      id: item.id,\n      text: item.text,\n      likesCount: item.likesCount\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.blockPosts,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: onPostChange,\n      ref: newPostElement,\n      name: \"\",\n      id: \"\",\n      cols: \"30\",\n      rows: \"10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewPost,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), postElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/gulie/solid-snake/src/components/content/MyPosts/Posts.jsx"],"names":["React","Post","styles","addPostActionCreater","updateNewPostActionCreater","Posts","props","newPostElement","createRef","text","current","value","onPostChange","addNewPost","console","log","postsData","postElements","map","item","index","name","id","likesCount","blockPosts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,oBAAR,EAA8BC,0BAA9B,QAA+D,iCAA/D;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,MAAIC,cAAc,gBAAGP,KAAK,CAACQ,SAAN,EAArB;AACA,MAAIC,IAAI,GAAGF,cAAc,CAACG,OAAf,CAAuBC,KAAlC;;AACA,MAAIC,YAAY,GAAG,MAAM;AACrBN,IAAAA,KAAK,CAACF,0BAAN,CAAiCK,IAAjC;AACH,GAFD;;AAIA,MAAII,UAAU,GAAG,MAAM;AACnBP,IAAAA,KAAK,CAACH,oBAAN;AACAI,IAAAA,cAAc,CAACG,OAAf,CAAuBC,KAAvB,GAA+B,EAA/B;AACH,GAHD;;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,SAAN,CAAgBA,SAA5B;AACA,MAAIC,YAAY,GAAGX,KAAK,CAACU,SAAN,CAAgBA,SAAhB,CAA0BE,GAA1B,CAA8B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9D,wBAAO,QAAC,IAAD;AAAkB,MAAA,IAAI,EAAED,IAAI,CAACE,IAA7B;AAAmC,MAAA,EAAE,EAAEF,IAAI,CAACG,EAA5C;AAAgD,MAAA,IAAI,EAAEH,IAAI,CAACV,IAA3D;AAAiE,MAAA,UAAU,EAAEU,IAAI,CAACI;AAAlF,OAAWH,KAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFkB,CAAnB;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAElB,MAAM,CAACsB,UAAvB;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAU,MAAA,QAAQ,EAAEZ,YAApB;AAAkC,MAAA,GAAG,EAAEL,cAAvC;AAAuD,MAAA,IAAI,EAAC,EAA5D;AAA+D,MAAA,EAAE,EAAC,EAAlE;AAAqE,MAAA,IAAI,EAAC,IAA1E;AAA+E,MAAA,IAAI,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAQ,MAAA,OAAO,EAAEM,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG,EAIFI,YAJE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CAvBD;;KAAMZ,K;AAyBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport Post from './Post/Post';\r\nimport styles from './posts.module.css';\r\nimport {addPostActionCreater, updateNewPostActionCreater} from '../../../reducers/posts-reducer';\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    let newPostElement = React.createRef();\r\n    let text = newPostElement.current.value;\r\n    let onPostChange = () => {\r\n        props.updateNewPostActionCreater(text);\r\n    }\r\n\r\n    let addNewPost = () => {\r\n        props.addPostActionCreater();\r\n        newPostElement.current.value = '';\r\n    }\r\n    console.log(props.postsData.postsData);\r\n    let postElements = props.postsData.postsData.map((item, index) => {\r\n        return <Post key={index} name={item.name} id={item.id} text={item.text} likesCount={item.likesCount} />\r\n    })\r\n\r\n    return <div className={styles.blockPosts}>\r\n        <p>Posts</p>\r\n        <textarea onChange={onPostChange} ref={newPostElement} name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n        <button onClick={addNewPost}>Add</button>\r\n        {postElements}\r\n    </div>\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}