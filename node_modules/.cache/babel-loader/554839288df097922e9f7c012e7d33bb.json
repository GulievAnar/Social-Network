{"ast":null,"code":"import Posts from './Posts';\nimport { addPostActionCreater, updateNewPostActionCreater } from '../../../reducers/posts-reducer';\nimport { connect } from 'react-redux'; // const PostsContainer = (props) => {\n//     // let state = props.store.getState();\n//     // let onPostChange = (text) => {\n//     //     props.store.dispatch(updateNewPostActionCreater(text));\n//     // }\n//     // let addNewPost = () => {\n//     //     props.store.dispatch(addPostActionCreater());\n//     // }\n//     return <StoreContext.Consumer>{\n//         (store) => {\n//             let onPostChange = (text) => {\n//                 store.dispatch(updateNewPostActionCreater(text));\n//             }\n//             let addNewPost = () => {\n//                 store.dispatch(addPostActionCreater());\n//             }\n//             let state = store.getState();\n//             return <Posts updateNewPostActionCreater={onPostChange}\n//                 addPostActionCreater={addNewPost}\n//                 postsData={state.postsReducer}\n//                 newTextPost={state.dialogsReducer.newTextPost} />\n//         }\n//     }\n//     </StoreContext.Consumer>\n// }\n\nlet mapStateToProps = state => {\n  return {\n    postsData: state.postsReducer,\n    newTextPost: state.dialogsReducer.newTextPost\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  console.log(dispatch);\n  debugger;\n  return {\n    updateNewPostActionCreater: text => {\n      dispatch(updateNewPostActionCreater(text));\n    },\n    addPostActionCreater: () => {\n      dispatch(addPostActionCreater());\n    }\n  };\n};\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\nexport default PostsContainer;","map":{"version":3,"sources":["C:/Users/gulie/solid-snake/src/components/content/MyPosts/PostsContainer.jsx"],"names":["Posts","addPostActionCreater","updateNewPostActionCreater","connect","mapStateToProps","state","postsData","postsReducer","newTextPost","dialogsReducer","mapDispatchToProps","dispatch","console","log","text","PostsContainer"],"mappings":"AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,oBAAT,EAA+BC,0BAA/B,QAAiE,iCAAjE;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAIA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACE,YADd;AAEHC,IAAAA,WAAW,EAAEH,KAAK,CAACI,cAAN,CAAqBD;AAF/B,GAAP;AAKH,CAND;;AAQA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA;AACA,SAAO;AACHT,IAAAA,0BAA0B,EAAGY,IAAD,IAAU;AAClCH,MAAAA,QAAQ,CAACT,0BAA0B,CAACY,IAAD,CAA3B,CAAR;AACH,KAHE;AAIHb,IAAAA,oBAAoB,EAAE,MAAM;AACxBU,MAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AACH;AANE,GAAP;AASH,CAZD;;AAcA,MAAMc,cAAc,GAAGZ,OAAO,CAACC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CV,KAA7C,CAAvB;AAEA,eAAee,cAAf","sourcesContent":["\r\nimport Posts from './Posts';\r\nimport { addPostActionCreater, updateNewPostActionCreater } from '../../../reducers/posts-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n// const PostsContainer = (props) => {\r\n\r\n//     // let state = props.store.getState();\r\n\r\n//     // let onPostChange = (text) => {\r\n//     //     props.store.dispatch(updateNewPostActionCreater(text));\r\n//     // }\r\n\r\n//     // let addNewPost = () => {\r\n//     //     props.store.dispatch(addPostActionCreater());\r\n//     // }\r\n\r\n\r\n//     return <StoreContext.Consumer>{\r\n\r\n//         (store) => {\r\n//             let onPostChange = (text) => {\r\n//                 store.dispatch(updateNewPostActionCreater(text));\r\n//             }\r\n        \r\n//             let addNewPost = () => {\r\n//                 store.dispatch(addPostActionCreater());\r\n//             }\r\n            \r\n//             let state = store.getState();\r\n//             return <Posts updateNewPostActionCreater={onPostChange}\r\n//                 addPostActionCreater={addNewPost}\r\n//                 postsData={state.postsReducer}\r\n//                 newTextPost={state.dialogsReducer.newTextPost} />\r\n//         }\r\n//     }\r\n//     </StoreContext.Consumer>\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.postsReducer,\r\n        newTextPost: state.dialogsReducer.newTextPost\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    console.log(dispatch);\r\n    debugger;\r\n    return {\r\n        updateNewPostActionCreater: (text) => {\r\n            dispatch(updateNewPostActionCreater(text));\r\n        },\r\n        addPostActionCreater: () => {\r\n            dispatch(addPostActionCreater());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;"]},"metadata":{},"sourceType":"module"}