{"ast":null,"code":"import dialogsReducer from './reducers/dialogs-reducer';\nimport postsReducer from './reducers/posts-reducer';\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_ACTION_CREATER = 'UPDATE-NEW-MESSAGE-ACTION-CREATER';\nlet store = {\n  _state: {\n    postsData: [{\n      id: 1,\n      name: 'Anar',\n      text: 'Hi',\n      likesCount: '0'\n    }, {\n      id: 2,\n      name: 'Anar',\n      text: 'Vova',\n      likesCount: '0'\n    }, {\n      id: 3,\n      name: 'Anar',\n      text: '1337',\n      likesCount: '0'\n    }],\n    dialogsData: [{\n      id: 1,\n      name: 'Anar'\n    }, {\n      id: 2,\n      name: 'Vova'\n    }, {\n      id: 3,\n      name: 'Danya'\n    }],\n    messagesData: [{\n      id: 1,\n      message: 'Hello'\n    }, {\n      id: 2,\n      message: 'How are you ?'\n    }, {\n      id: 3,\n      message: 'My name is Anar'\n    }],\n    newTextPost: ''\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  rerenderEntireTree() {\n    console.log('state changed');\n  },\n\n  subscribe(observer) {\n    this.rerenderEntireTree = observer;\n  },\n\n  dispatch(action) {\n    this._state.messagesData = dialogsReducer(this._state.messagesData, action);\n    this._state.postsData = postsReducer(this._state.postsData, action);\n    this.rerenderEntireTree(this._state);\n  }\n\n};\nexport let addPostActionCreater = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport let updateNewPostActionCreater = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nexport let updateNewMessageActionCreater = text => {\n  return {\n    type: UPDATE_NEW_MESSAGE_ACTION_CREATER,\n    newText: text\n  };\n};\nexport let addMessageActionCreater = () => {\n  return {\n    type: ADD_MESSAGE\n  };\n};\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["C:/Users/gulie/solid-snake/src/state.js"],"names":["dialogsReducer","postsReducer","ADD_POST","UPDATE_NEW_POST_TEXT","ADD_MESSAGE","UPDATE_NEW_MESSAGE_ACTION_CREATER","store","_state","postsData","id","name","text","likesCount","dialogsData","messagesData","message","newTextPost","getState","rerenderEntireTree","console","log","subscribe","observer","dispatch","action","addPostActionCreater","type","updateNewPostActionCreater","newText","updateNewMessageActionCreater","addMessageActionCreater","window"],"mappings":"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","sourcesContent":["import dialogsReducer from './reducers/dialogs-reducer';\r\nimport postsReducer from './reducers/posts-reducer'\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_ACTION_CREATER = 'UPDATE-NEW-MESSAGE-ACTION-CREATER';\r\n\r\n\r\nlet store = {\r\n    _state: {\r\n        postsData: [\r\n            { id: 1, name: 'Anar', text: 'Hi', likesCount: '0' },\r\n            { id: 2, name: 'Anar', text: 'Vova', likesCount: '0' },\r\n            { id: 3, name: 'Anar', text: '1337', likesCount: '0' },\r\n        ],\r\n        dialogsData: [\r\n            { id: 1, name: 'Anar' },\r\n            { id: 2, name: 'Vova' },\r\n            { id: 3, name: 'Danya' },\r\n        ],\r\n\r\n        messagesData: [\r\n            { id: 1, message: 'Hello' },\r\n            { id: 2, message: 'How are you ?' },\r\n            { id: 3, message: 'My name is Anar' },\r\n        ],\r\n        newTextPost: '',\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n\r\n    rerenderEntireTree() {\r\n        console.log('state changed')\r\n    },\r\n    subscribe(observer) {\r\n        this.rerenderEntireTree = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n       this._state.messagesData =  dialogsReducer(this._state.messagesData, action);\r\n       this._state.postsData =  postsReducer(this._state.postsData, action);\r\n       this.rerenderEntireTree(this._state);\r\n    }\r\n}\r\n\r\nexport let addPostActionCreater = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\n\r\nexport let updateNewPostActionCreater = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n}\r\n\r\nexport let updateNewMessageActionCreater = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_ACTION_CREATER,\r\n        newText: text\r\n    }\r\n}\r\n\r\nexport let addMessageActionCreater = () => {\r\n    return {\r\n        type: ADD_MESSAGE\r\n    }\r\n}\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}