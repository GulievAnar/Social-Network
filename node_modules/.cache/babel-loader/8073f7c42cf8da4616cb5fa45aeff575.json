{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nlet initialState = {\n  users: [{\n    id: 1,\n    followed: true,\n    name: 'Anar Guliev',\n    status: 'I m boss',\n    location: 'Almaty'\n  }, {\n    id: 2,\n    followed: false,\n    name: 'Vladimir Lubnin',\n    status: 'I love Tarkov',\n    location: 'Saints-Peterburg'\n  }, {\n    id: 3,\n    followed: false,\n    name: 'Danya Pimenov',\n    status: 'I love Skate',\n    location: 'Saints-Peterburg'\n  }]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: true\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              followed: false\n            };\n          }\n\n          return user;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport let followActionCreater = userId => {\n  return {\n    type: FOLLOW,\n    userId\n  };\n};\nexport let unfollowActionCreater = text => {\n  return {\n    type: UNFOLLOW\n  };\n};\nexport const setUsersActionCreater = users => {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/gulie/solid-snake/src/reducers/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","id","followed","name","status","location","usersReducer","state","action","type","map","user","userId","followActionCreater","unfollowActionCreater","text","setUsersActionCreater"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,IAAnB;AAAyBC,IAAAA,IAAI,EAAE,aAA/B;AAA8CC,IAAAA,MAAM,EAAE,UAAtD;AAAkEC,IAAAA,QAAQ,EAAE;AAA5E,GADG,EAEH;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,KAAnB;AAA0BC,IAAAA,IAAI,EAAE,iBAAhC;AAAmDC,IAAAA,MAAM,EAAE,eAA3D;AAA4EC,IAAAA,QAAQ,EAAE;AAAtF,GAFG,EAGH;AAAEJ,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,KAAnB;AAA0BC,IAAAA,IAAI,EAAE,eAAhC;AAAiDC,IAAAA,MAAM,EAAE,cAAzD;AAAyEC,IAAAA,QAAQ,EAAE;AAAnF,GAHG;AADQ,CAAnB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,MAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,IAAI,IAAI;AAC3B,cAAIA,IAAI,CAACV,EAAL,KAAYO,MAAM,CAACI,MAAvB,EAA+B;AAC3B,mBAAO,EAAE,GAAGD,IAAL;AAAWT,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACH;;AACD,iBAAOS,IAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKd,QAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,IAAI,IAAI;AAC3B,cAAIA,IAAI,CAACV,EAAL,KAAYO,MAAM,CAACI,MAAvB,EAA+B;AAC3B,mBAAO,EAAE,GAAGD,IAAL;AAAWT,cAAAA,QAAQ,EAAE;AAArB,aAAP;AACH;;AACD,iBAAOS,IAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKb,SAAL;AACI,aAAO,EACH,GAAGS,KADA;AACOP,QAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiB,GAAGQ,MAAM,CAACR,KAA3B;AADd,OAAP;;AAGJ;AACI,aAAOO,KAAP;AA1BR;AA4BH,CA9BD;;AAgCA,OAAO,IAAIM,mBAAmB,GAAID,MAAD,IAAY;AACzC,SAAO;AACHH,IAAAA,IAAI,EAAEb,MADH;AAEHgB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAIE,qBAAqB,GAAIC,IAAD,IAAU;AACzC,SAAO;AACHN,IAAAA,IAAI,EAAEZ;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMmB,qBAAqB,GAAIhB,KAAD,IAAW;AAC5C,SAAO;AACHS,IAAAA,IAAI,EAAEX,SADH;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,eAAeM,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nlet initialState = {\r\n    users: [\r\n        { id: 1, followed: true, name: 'Anar Guliev', status: 'I m boss', location: 'Almaty' },\r\n        { id: 2, followed: false, name: 'Vladimir Lubnin', status: 'I love Tarkov', location: 'Saints-Peterburg' },\r\n        { id: 3, followed: false, name: 'Danya Pimenov', status: 'I love Skate', location: 'Saints-Peterburg' },\r\n    ]\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: true }\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: false }\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...state.users, ...action.users]\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport let followActionCreater = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport let unfollowActionCreater = (text) => {\r\n    return {\r\n        type: UNFOLLOW\r\n    }\r\n}\r\n\r\nexport const setUsersActionCreater = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}