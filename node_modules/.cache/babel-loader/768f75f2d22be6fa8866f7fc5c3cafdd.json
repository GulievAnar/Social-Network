{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gulie\\\\solid-snake\\\\src\\\\components\\\\content\\\\MyPosts\\\\PostsContainer.jsx\";\nimport React from 'react';\nimport Posts from './Posts';\nimport { addPostActionCreater, updateNewPostActionCreater } from '../../../reducers/posts-reducer';\nimport StoreContext from '../../../StoreContex';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostsContainer = props => {\n  // let state = props.store.getState();\n  // let onPostChange = (text) => {\n  //     props.store.dispatch(updateNewPostActionCreater(text));\n  // }\n  // let addNewPost = () => {\n  //     props.store.dispatch(addPostActionCreater());\n  // }\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let onPostChange = text => {\n        store.dispatch(updateNewPostActionCreater(text));\n      };\n\n      let addNewPost = () => {\n        store.dispatch(addPostActionCreater());\n      };\n\n      let state = store.getState();\n      return /*#__PURE__*/_jsxDEV(Posts, {\n        updateNewPostActionCreater: onPostChange,\n        addPostActionCreater: addNewPost,\n        postsData: state.postsReducer,\n        newTextPost: state.dialogsReducer.newTextPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_c = PostsContainer;\n\nlet mapStateToProps = state => {\n  return {\n    postsData: state.postsReducer,\n    newTextPost: state.dialogsReducer.newTextPost\n  };\n};\n\nlet mapDispatchToProps = () => {\n  return {\n    updateNewPostActionCreater: () => {},\n    addPostActionCreater: () => {}\n  };\n};\n\nconst SuperPostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\nexport default PostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsContainer\");","map":{"version":3,"sources":["C:/Users/gulie/solid-snake/src/components/content/MyPosts/PostsContainer.jsx"],"names":["React","Posts","addPostActionCreater","updateNewPostActionCreater","StoreContext","connect","PostsContainer","props","store","onPostChange","text","dispatch","addNewPost","state","getState","postsReducer","dialogsReducer","newTextPost","mapStateToProps","postsData","mapDispatchToProps","SuperPostsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,oBAAT,EAA+BC,0BAA/B,QAAiE,iCAAjE;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAIA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAA,cAEFC,KAAD,IAAW;AACP,UAAIC,YAAY,GAAIC,IAAD,IAAU;AACzBF,QAAAA,KAAK,CAACG,QAAN,CAAeR,0BAA0B,CAACO,IAAD,CAAzC;AACH,OAFD;;AAIA,UAAIE,UAAU,GAAG,MAAM;AACnBJ,QAAAA,KAAK,CAACG,QAAN,CAAeT,oBAAoB,EAAnC;AACH,OAFD;;AAIA,UAAIW,KAAK,GAAGL,KAAK,CAACM,QAAN,EAAZ;AACA,0BAAO,QAAC,KAAD;AAAO,QAAA,0BAA0B,EAAEL,YAAnC;AACH,QAAA,oBAAoB,EAAEG,UADnB;AAEH,QAAA,SAAS,EAAEC,KAAK,CAACE,YAFd;AAGH,QAAA,WAAW,EAAEF,KAAK,CAACG,cAAN,CAAqBC;AAH/B;AAAA;AAAA;AAAA;AAAA,cAAP;AAIH;AAhBE;AAAA;AAAA;AAAA;AAAA,UAAP;AAmBH,CAhCD;;KAAMX,c;;AAkCN,IAAIY,eAAe,GAAIL,KAAD,IAAW;AAC7B,SAAO;AACHM,IAAAA,SAAS,EAAEN,KAAK,CAACE,YADd;AAEHE,IAAAA,WAAW,EAAEJ,KAAK,CAACG,cAAN,CAAqBC;AAF/B,GAAP;AAKH,CAND;;AAQA,IAAIG,kBAAkB,GAAG,MAAM;AAC3B,SAAO;AACHjB,IAAAA,0BAA0B,EAAE,MAAM,CAAE,CADjC;AAEHD,IAAAA,oBAAoB,EAAE,MAAM,CAAE;AAF3B,GAAP;AAKH,CAND;;AAQA,MAAMmB,mBAAmB,GAAGhB,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,KAA7C,CAA5B;AAEA,eAAeK,cAAf","sourcesContent":["import React from 'react';\r\nimport Posts from './Posts';\r\nimport { addPostActionCreater, updateNewPostActionCreater } from '../../../reducers/posts-reducer';\r\nimport StoreContext from '../../../StoreContex';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst PostsContainer = (props) => {\r\n\r\n    // let state = props.store.getState();\r\n\r\n    // let onPostChange = (text) => {\r\n    //     props.store.dispatch(updateNewPostActionCreater(text));\r\n    // }\r\n\r\n    // let addNewPost = () => {\r\n    //     props.store.dispatch(addPostActionCreater());\r\n    // }\r\n\r\n\r\n    return <StoreContext.Consumer>{\r\n\r\n        (store) => {\r\n            let onPostChange = (text) => {\r\n                store.dispatch(updateNewPostActionCreater(text));\r\n            }\r\n        \r\n            let addNewPost = () => {\r\n                store.dispatch(addPostActionCreater());\r\n            }\r\n            \r\n            let state = store.getState();\r\n            return <Posts updateNewPostActionCreater={onPostChange}\r\n                addPostActionCreater={addNewPost}\r\n                postsData={state.postsReducer}\r\n                newTextPost={state.dialogsReducer.newTextPost} />\r\n        }\r\n    }\r\n    </StoreContext.Consumer>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.postsReducer,\r\n        newTextPost: state.dialogsReducer.newTextPost\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = () => {\r\n    return {\r\n        updateNewPostActionCreater: () => {},\r\n        addPostActionCreater: () => {}\r\n\r\n    }\r\n}\r\n\r\nconst SuperPostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;"]},"metadata":{},"sourceType":"module"}