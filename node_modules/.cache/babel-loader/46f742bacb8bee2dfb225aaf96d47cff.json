{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nlet store = {\n  _state: {\n    postsData: [{\n      id: 1,\n      name: 'Anar',\n      text: 'Hi',\n      likesCount: '0'\n    }, {\n      id: 2,\n      name: 'Anar',\n      text: 'Vova',\n      likesCount: '0'\n    }, {\n      id: 3,\n      name: 'Anar',\n      text: '1337',\n      likesCount: '0'\n    }],\n    newTextPost: ''\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  dialogsData: [{\n    id: 1,\n    name: 'Anar'\n  }, {\n    id: 2,\n    name: 'Vova'\n  }, {\n    id: 3,\n    name: 'Danya'\n  }],\n  messagesData: [{\n    id: 1,\n    message: 'Hello'\n  }, {\n    id: 2,\n    message: 'How are you ?'\n  }, {\n    id: 3,\n    message: 'My name is Anar'\n  }],\n\n  rerenderEntireTree() {\n    console.log('state changed');\n  },\n\n  subscribe(observer) {\n    this.rerenderEntireTree = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: 4,\n        name: 'Anar',\n        text: this._state.newTextPost,\n        likesCount: 0\n      };\n\n      this._state.postsData.push(newPost);\n\n      this.rerenderEntireTree(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      console.log(this._state);\n      this._state.newTextPost = action.newText;\n      this.rerenderEntireTree(this._state);\n    }\n  }\n\n};\nexport let addPostActionCreater = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport let updateNewPostActionCreater = text => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  };\n};\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["C:/Users/gulie/solid-snake/src/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","store","_state","postsData","id","name","text","likesCount","newTextPost","getState","dialogsData","messagesData","message","rerenderEntireTree","console","log","subscribe","observer","dispatch","action","type","newPost","push","newText","addPostActionCreater","updateNewPostActionCreater","window"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,SAAS,EAAE,CACP;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,MAAf;AAAuBC,MAAAA,IAAI,EAAE,IAA7B;AAAmCC,MAAAA,UAAU,EAAE;AAA/C,KADO,EAEP;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,MAAf;AAAuBC,MAAAA,IAAI,EAAE,MAA7B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAFO,EAGP;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,MAAf;AAAuBC,MAAAA,IAAI,EAAE,MAA7B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAHO,CADP;AAMJC,IAAAA,WAAW,EAAE;AANT,GADA;;AASRC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKP,MAAZ;AACH,GAXO;;AAaRQ,EAAAA,WAAW,EAAE,CACT;AAAEN,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADS,EAET;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFS,EAGT;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHS,CAbL;AAmBRM,EAAAA,YAAY,EAAE,CACV;AAAEP,IAAAA,EAAE,EAAE,CAAN;AAASQ,IAAAA,OAAO,EAAE;AAAlB,GADU,EAEV;AAAER,IAAAA,EAAE,EAAE,CAAN;AAASQ,IAAAA,OAAO,EAAE;AAAlB,GAFU,EAGV;AAAER,IAAAA,EAAE,EAAE,CAAN;AAASQ,IAAAA,OAAO,EAAE;AAAlB,GAHU,CAnBN;;AAwBRC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GA1BO;;AA2BRC,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKJ,kBAAL,GAA0BI,QAA1B;AACH,GA7BO;;AA+BRC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,QAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAIC,OAAO,GAAG;AACVjB,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,IAAI,EAAE,MAFI;AAGVC,QAAAA,IAAI,EAAE,KAAKJ,MAAL,CAAYM,WAHR;AAIVD,QAAAA,UAAU,EAAE;AAJF,OAAd;;AAMA,WAAKL,MAAL,CAAYC,SAAZ,CAAsBmB,IAAtB,CAA2BD,OAA3B;;AACA,WAAKR,kBAAL,CAAwB,KAAKX,MAA7B;AACH,KATD,MASO,IAAIiB,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA4C;AAC/CN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,MAAjB;AACA,WAAKA,MAAL,CAAYM,WAAZ,GAA0BW,MAAM,CAACI,OAAjC;AACA,WAAKV,kBAAL,CAAwB,KAAKX,MAA7B;AACH;AACJ;;AA9CO,CAAZ;AAiDA,OAAO,IAAIsB,oBAAoB,GAAG,MAAM;AACpC,SAAO;AACHJ,IAAAA,IAAI,EAAErB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,IAAI0B,0BAA0B,GAAInB,IAAD,IAAU;AAC9C,SAAO;AACHc,IAAAA,IAAI,EAAEpB,oBADH;AAEHuB,IAAAA,OAAO,EAAEjB;AAFN,GAAP;AAIH,CALM;AAOPoB,MAAM,CAACzB,KAAP,GAAeA,KAAf;AAEA,eAAeA,KAAf","sourcesContent":["const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet store = {\r\n    _state: {\r\n        postsData: [\r\n            { id: 1, name: 'Anar', text: 'Hi', likesCount: '0' },\r\n            { id: 2, name: 'Anar', text: 'Vova', likesCount: '0' },\r\n            { id: 3, name: 'Anar', text: '1337', likesCount: '0' },\r\n        ],\r\n        newTextPost: '',\r\n    },\r\n    getState() {\r\n        return this._state;\r\n    },\r\n\r\n    dialogsData: [\r\n        { id: 1, name: 'Anar' },\r\n        { id: 2, name: 'Vova' },\r\n        { id: 3, name: 'Danya' },\r\n    ],\r\n\r\n    messagesData: [\r\n        { id: 1, message: 'Hello' },\r\n        { id: 2, message: 'How are you ?' },\r\n        { id: 3, message: 'My name is Anar' },\r\n    ],\r\n    rerenderEntireTree() {\r\n        console.log('state changed')\r\n    },\r\n    subscribe(observer) {\r\n        this.rerenderEntireTree = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === 'ADD-POST') {\r\n            let newPost = {\r\n                id: 4,\r\n                name: 'Anar',\r\n                text: this._state.newTextPost,\r\n                likesCount: 0\r\n            }\r\n            this._state.postsData.push(newPost);\r\n            this.rerenderEntireTree(this._state);\r\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\r\n            console.log(this._state);\r\n            this._state.newTextPost = action.newText;\r\n            this.rerenderEntireTree(this._state);\r\n        }\r\n    }\r\n}\r\n\r\nexport let addPostActionCreater = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\n\r\nexport let updateNewPostActionCreater = (text) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: text\r\n    }\r\n}\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}