{"ast":null,"code":"import { updateNewMessageActionCreater, addMessageActionCreater } from '../../../reducers/dialogs-reducer';\nimport { connect } from 'react-redux';\nimport Dialogs from './Dialogs'; // const DialogsContainer = (props) => {\n// let state = props.store.getState();\n// let onMessageChange = (text) => {\n//     store.dispatch(updateNewMessageActionCreater(text));\n// }\n// let addNewMessage = () => {\n//     store.dispatch(addMessageActionCreater());\n// }\n//     return <StoreContext.Consumer>{\n//         (store) => {\n//             let onMessageChange = (text) => {\n//                 store.dispatch(updateNewMessageActionCreater(text));\n//             }\n//             let addNewMessage = () => {\n//                 store.dispatch(addMessageActionCreater());\n//             }\n//             let state = store.getState();\n//             return <Dialogs updateNewMessageActionCreater={onMessageChange} addMessageActionCreater={addNewMessage} dialogsData={state.dialogsReducer.dialogsData} messagesData={state.dialogsReducer.messagesData} />\n//         }\n//     }\n//     </StoreContext.Consumer>\n// }\n\nlet mapStateToProps = state => {\n  console.log(state);\n  return {\n    dialogsData: state.dialogsReducer.dialogsData,\n    messagesData: state.dialogsReducer.messagesData,\n    newTextPost: state.dialogsReducer.newTextPost\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageActionCreater: text => {\n      dispatch(updateNewMessageActionCreater(text));\n    },\n    addMessageActionCreater: () => {\n      dispatch(addMessageActionCreater());\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["C:/Users/gulie/solid-snake/src/components/content/dialogs/DialogsContainer.jsx"],"names":["updateNewMessageActionCreater","addMessageActionCreater","connect","Dialogs","mapStateToProps","state","console","log","dialogsData","dialogsReducer","messagesData","newTextPost","mapDispatchToProps","dispatch","text","DialogsContainer"],"mappings":"AACA,SAASA,6BAAT,EAAwCC,uBAAxC,QAAuE,mCAAvE;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAIA;AACI;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGJ;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACHG,IAAAA,WAAW,EAAEH,KAAK,CAACI,cAAN,CAAqBD,WAD/B;AAEHE,IAAAA,YAAY,EAAEL,KAAK,CAACI,cAAN,CAAqBC,YAFhC;AAGHC,IAAAA,WAAW,EAAEN,KAAK,CAACI,cAAN,CAAqBE;AAH/B,GAAP;AAMH,CARD;;AAUA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHb,IAAAA,6BAA6B,EAAGc,IAAD,IAAU;AACrCD,MAAAA,QAAQ,CAACb,6BAA6B,CAACc,IAAD,CAA9B,CAAR;AACH,KAHE;AAIHb,IAAAA,uBAAuB,EAAE,MAAM;AAC3BY,MAAAA,QAAQ,CAACZ,uBAAuB,EAAxB,CAAR;AACH;AANE,GAAP;AASH,CAVD;;AAYA,MAAMc,gBAAgB,GAAGb,OAAO,CAACE,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CT,OAA7C,CAAzB;AAIA,eAAeY,gBAAf","sourcesContent":["\r\nimport { updateNewMessageActionCreater, addMessageActionCreater } from '../../../reducers/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n    // let state = props.store.getState();\r\n\r\n\r\n    // let onMessageChange = (text) => {\r\n    //     store.dispatch(updateNewMessageActionCreater(text));\r\n    // }\r\n\r\n    // let addNewMessage = () => {\r\n    //     store.dispatch(addMessageActionCreater());\r\n    // }\r\n\r\n\r\n//     return <StoreContext.Consumer>{\r\n\r\n//         (store) => {\r\n//             let onMessageChange = (text) => {\r\n//                 store.dispatch(updateNewMessageActionCreater(text));\r\n//             }\r\n        \r\n//             let addNewMessage = () => {\r\n//                 store.dispatch(addMessageActionCreater());\r\n//             }\r\n            \r\n//             let state = store.getState();\r\n//             return <Dialogs updateNewMessageActionCreater={onMessageChange} addMessageActionCreater={addNewMessage} dialogsData={state.dialogsReducer.dialogsData} messagesData={state.dialogsReducer.messagesData} />\r\n//         }\r\n//     }\r\n//     </StoreContext.Consumer>\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        dialogsData: state.dialogsReducer.dialogsData,\r\n        messagesData: state.dialogsReducer.messagesData,\r\n        newTextPost: state.dialogsReducer.newTextPost\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageActionCreater: (text) => {\r\n            dispatch(updateNewMessageActionCreater(text));\r\n        },\r\n        addMessageActionCreater: () => {\r\n            dispatch(addMessageActionCreater());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\n\r\n\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}